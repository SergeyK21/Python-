1 модуль
____________________________________________________________________________________________________________________________________________________________________________
Задача 1. Числа Фибоначчи
Напишите функцию, которая возвращает список, содержащий числа Фибоначчи, в количестве, переданном в функцию. 

Задача 2. FizzBuzz 
Выведите числа согласно игре FizzBuzz. 

Суть игры: пользователь вводит максимальное число, и после этого программа выводит значения согласно следующим правилам:

Начинаем с единицы и последовательно увеличиваем значение на один.
Когда число делится на три, оно заменяется на fizz, если число делится на пять, то произносится buzz.
Числа, делящиеся на три и пять одновременно, заменяются на fizz buzz.
При достижении максимального числа мы выводим число согласно правилам и завершаем программу. 

Задача 3. Система расчёта
Организуйте систему расчёта статистик успеваемости студентов.

Для начала вы вводите список предметов, после — список фамилий и имён студентов. После для каждого студента выводите оценку в диапазоне от 1 до 10. У вас 10-балльная система оценок.

Когда сбор данных будет завершён, выведите студента с лучшей средней успеваемостью. И средний балл этого студента по предметам.

Задача 4. Расчёт площади треугольника
Введите три стороны треугольника и после этого рассчитайте его площадь. 

Задача 5. Простые числа
Введите максимальное число. Выведите все простые числа, которые не превосходят это число. Если само число является простым, то выведите и его. 

При решении используйте метод «Решето Эратосфена». При выводе выводите в строке числа, принадлежащие одному десятку. 

Задача 6. Калькулятор
Сделайте калькулятор, который поддерживает четыре операции: сложение (+), умножение (×), вычитание (−), деление (÷).

Калькулятор должен поддерживать операции с целыми числами и числами с плавающей точкой, а также должен быть толерантен к пробелам, то есть между операндами и числами может быть неограниченное число пробелов.
Как работает калькулятор
Вы указываете имя файла, содержащего выражения, которые нужно вычислить. Одно выражение — одна строка. Если в выражении есть ошибки, калькулятор запоминает номера строк, в которых они встретились. 

Калькулятор выводит результаты расчётов, номер строки и результат вычисления, а также количество ошибок, номера строк, в которых они встретились, и тип ошибок. 
____________________________________________________________________________________________________________________________________________________________________________
2 модуль
____________________________________________________________________________________________________________________________________________________________________________
Задача 1. Подготовка
Откройте данный файл в Jupiter Notebook и выполните предложенную практическую работу. Данная практика — подготовительный этап. Она содержит подсказки для самопроверки и не требует сдачи куратору на проверку. Однако, если у вас возникнут трудности с выполнением, вы можете задать вопросы через форму сдачи практической работы.

Задача 2
Напишите функцию-генератор, которая возвращает очередной элемент, содержащий числа Фибоначчи в количестве, переданном в функцию. Если число не передано, то мы возвращаем бесконечную последовательность. Ограничьте искусственно вывод 100 элементов.

Задача 3
Напишите функции-генераторы, которые выводят элементы разложения sin, cos и exp в ряды Тейлора. После, используя функциональный подход, найдите сумму членов ряда и сравните её со значением вычисления функции из модуля math. Выведите разницу в экспоненциальном представлении.

Разложение функций в ряд Тейлора:...

Задача 4
Реализуйте преобразование координат точки на плоскости из декартовой системы координат в полярную. Точка в декартовой системе координат задаётся двумя вещественными числами x и y, которые означают величины проекций точки на оси. 

Координаты в полярной системе координат:

полярный радиус — расстояние от начала системы координат;
полярный угол — угол, отсчитываемый против часовой стрелки от луча, выходящего из начала системы координат.
Преобразование из декартовых координат в полярные выглядит следующим образом:...

Задача 5
Вам дан список молекул и их атомная масса:

H (водород) — 1.008
O (кислород) — 15.999;
S (сера) — 32.066;
Na (натрий) — 22.990;
Cl (хлор) — 35.453;
K (калий) — 39.098. 
Посчитайте молярную массу молекул, используя методы функционального программирования. Выведите значения в порядке возрастания молярной массы.

Задача 6
Расширим возможности калькулятора, который вы делали в первом модуле, и модифицируем логику обработки выражений. Теперь будем собирать возникающие исключения с помощью системы логирования. 

Калькулятор должен поддерживать четыре операции: сложение (+), умножение (×), вычитание (−), деление (÷), определённые с целыми числами и числами с плавающей точкой, а также должен быть толерантен к пробелам, то есть между операндами и числами может быть неограниченное число пробелов.

Для обработки выражений реализуйте функциональный подход: создайте функцию для каждой операции и используйте её как объект.

Задача 7
Реализуйте «Шифр Цезаря»:

вводим с клавиатуры размер смещения, оно может быть отрицательным и положительным;
вводим с клавиатуры текст сообщения;
на экран выводится шифрованное сообщение и результат расшифровки.

Задача 8
Дан файл системы контроля спорткомплекса. Вам нужно:

Прочитать файл (поля в файле разделены символом табуляции «\t»).
Вычислить время, проведённое спортсменом в бассейне (разница между временем входа и выхода из бассейна).
Рассчитать время, проведённое в комплексе (время между входом и выходом в комплекс).
Вывести в отдельный файл с логами в случае, если данные о выходе спортсмена отсутствуют, а также в случае обнаружения ошибок или неточностей в записях (отсутствие времени входа, выхода, противоречия в записях).